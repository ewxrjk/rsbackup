# Makefile.in generated by automake 1.16.1 from Makefile.am.
# @configure_input@

# Copyright (C) 1994-2018 Free Software Foundation, Inc.

# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.

@SET_MAKE@



VPATH = @srcdir@
am__is_gnu_make = { \
  if test -z '$(MAKELEVEL)'; then \
    false; \
  elif test -n '$(MAKE_HOST)'; then \
    true; \
  elif test -n '$(MAKE_VERSION)' && test -n '$(CURDIR)'; then \
    true; \
  else \
    false; \
  fi; \
}
am__make_running_with_option = \
  case $${target_option-} in \
      ?) ;; \
      *) echo "am__make_running_with_option: internal error: invalid" \
              "target option '$${target_option-}' specified" >&2; \
         exit 1;; \
  esac; \
  has_opt=no; \
  sane_makeflags=$$MAKEFLAGS; \
  if $(am__is_gnu_make); then \
    sane_makeflags=$$MFLAGS; \
  else \
    case $$MAKEFLAGS in \
      *\\[\ \	]*) \
        bs=\\; \
        sane_makeflags=`printf '%s\n' "$$MAKEFLAGS" \
          | sed "s/$$bs$$bs[$$bs $$bs	]*//g"`;; \
    esac; \
  fi; \
  skip_next=no; \
  strip_trailopt () \
  { \
    flg=`printf '%s\n' "$$flg" | sed "s/$$1.*$$//"`; \
  }; \
  for flg in $$sane_makeflags; do \
    test $$skip_next = yes && { skip_next=no; continue; }; \
    case $$flg in \
      *=*|--*) continue;; \
        -*I) strip_trailopt 'I'; skip_next=yes;; \
      -*I?*) strip_trailopt 'I';; \
        -*O) strip_trailopt 'O'; skip_next=yes;; \
      -*O?*) strip_trailopt 'O';; \
        -*l) strip_trailopt 'l'; skip_next=yes;; \
      -*l?*) strip_trailopt 'l';; \
      -[dEDm]) skip_next=yes;; \
      -[JT]) skip_next=yes;; \
    esac; \
    case $$flg in \
      *$$target_option*) has_opt=yes; break;; \
    esac; \
  done; \
  test $$has_opt = yes
am__make_dryrun = (target_option=n; $(am__make_running_with_option))
am__make_keepgoing = (target_option=k; $(am__make_running_with_option))
pkgdatadir = $(datadir)/@PACKAGE@
pkgincludedir = $(includedir)/@PACKAGE@
pkglibdir = $(libdir)/@PACKAGE@
pkglibexecdir = $(libexecdir)/@PACKAGE@
am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
build_triplet = @build@
host_triplet = @host@
bin_PROGRAMS = rsbackup$(EXEEXT) rsbackup-graph$(EXEEXT)
noinst_PROGRAMS = test-date$(EXEEXT) test-io$(EXEEXT) \
	test-directory$(EXEEXT) test-subprocess$(EXEEXT) \
	test-unicode$(EXEEXT) test-timespec$(EXEEXT) \
	test-command$(EXEEXT) test-select$(EXEEXT) \
	test-confbase$(EXEEXT) test-check$(EXEEXT) \
	test-device$(EXEEXT) test-host$(EXEEXT) test-volume$(EXEEXT) \
	test-progress$(EXEEXT) test-database$(EXEEXT) \
	test-tolines$(EXEEXT) test-globfiles$(EXEEXT) \
	test-lock$(EXEEXT) test-split$(EXEEXT) \
	test-parseinteger$(EXEEXT) test-prunedecay$(EXEEXT) \
	test-eventloop$(EXEEXT) test-color$(EXEEXT) \
	test-base64$(EXEEXT) test-indent$(EXEEXT) test-action$(EXEEXT)
TESTS = test-date$(EXEEXT) test-io$(EXEEXT) test-directory$(EXEEXT) \
	test-subprocess$(EXEEXT) test-unicode$(EXEEXT) \
	test-timespec$(EXEEXT) test-command$(EXEEXT) \
	test-select$(EXEEXT) test-confbase$(EXEEXT) \
	test-check$(EXEEXT) test-device$(EXEEXT) test-host$(EXEEXT) \
	test-volume$(EXEEXT) test-progress$(EXEEXT) \
	test-database$(EXEEXT) test-tolines$(EXEEXT) \
	test-globfiles$(EXEEXT) test-lock$(EXEEXT) test-split$(EXEEXT) \
	test-parseinteger$(EXEEXT) test-prunedecay$(EXEEXT) \
	test-eventloop$(EXEEXT) test-color$(EXEEXT) \
	test-base64$(EXEEXT) test-indent$(EXEEXT) test-action$(EXEEXT) \
	check-source
subdir = src
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
am__aclocal_m4_deps = $(top_srcdir)/acinclude.m4 \
	$(top_srcdir)/configure.ac
am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
	$(ACLOCAL_M4)
DIST_COMMON = $(srcdir)/Makefile.am $(dist_noinst_SCRIPTS) \
	$(am__DIST_COMMON)
mkinstalldirs = $(install_sh) -d
CONFIG_HEADER = $(top_builddir)/config.h
CONFIG_CLEAN_FILES =
CONFIG_CLEAN_VPATH_FILES =
am__installdirs = "$(DESTDIR)$(bindir)"
PROGRAMS = $(bin_PROGRAMS) $(noinst_PROGRAMS)
LIBRARIES = $(noinst_LIBRARIES)
ARFLAGS = cru
AM_V_AR = $(am__v_AR_@AM_V@)
am__v_AR_ = $(am__v_AR_@AM_DEFAULT_V@)
am__v_AR_0 = @echo "  AR      " $@;
am__v_AR_1 = 
librsbackup_a_AR = $(AR) $(ARFLAGS)
librsbackup_a_LIBADD =
am_librsbackup_a_OBJECTS = Backup.$(OBJEXT) BulkRemove.$(OBJEXT) \
	Check.$(OBJEXT) Command.$(OBJEXT) Conf.$(OBJEXT) \
	Date.$(OBJEXT) DeviceAccess.$(OBJEXT) Device.$(OBJEXT) \
	Directory.$(OBJEXT) Document.$(OBJEXT) Email.$(OBJEXT) \
	error.$(OBJEXT) Errors.$(OBJEXT) FileLock.$(OBJEXT) \
	Host.$(OBJEXT) HTML.$(OBJEXT) IO.$(OBJEXT) \
	MakeBackup.$(OBJEXT) Progress.$(OBJEXT) Prune.$(OBJEXT) \
	PrunePolicy.$(OBJEXT) Report.$(OBJEXT) RetireDevices.$(OBJEXT) \
	RetireVolumes.$(OBJEXT) Store.$(OBJEXT) stylesheet.$(OBJEXT) \
	Subprocess.$(OBJEXT) Text.$(OBJEXT) Unicode.$(OBJEXT) \
	Volume.$(OBJEXT) ConfBase.$(OBJEXT) toLines.$(OBJEXT) \
	globFiles.$(OBJEXT) Database.$(OBJEXT) parseInteger.$(OBJEXT) \
	split.$(OBJEXT) EventLoop.$(OBJEXT) nonblock.$(OBJEXT) \
	Action.$(OBJEXT) Selection.$(OBJEXT) Color.$(OBJEXT) \
	parseFloat.$(OBJEXT) Render.$(OBJEXT) HistoryGraph.$(OBJEXT) \
	ColorStrategy.$(OBJEXT) ConfDirective.$(OBJEXT) \
	base64.$(OBJEXT) substitute.$(OBJEXT) timestamp.$(OBJEXT) \
	debug.$(OBJEXT) Indent.$(OBJEXT) BackupPolicy.$(OBJEXT)
librsbackup_a_OBJECTS = $(am_librsbackup_a_OBJECTS)
am__objects_1 = PrunePolicyAge.$(OBJEXT) PrunePolicyNever.$(OBJEXT) \
	PrunePolicyExec.$(OBJEXT) PrunePolicyDecay.$(OBJEXT) \
	BackupPolicyDaily.$(OBJEXT) BackupPolicyAlways.$(OBJEXT) \
	BackupPolicyInterval.$(OBJEXT)
am_rsbackup_OBJECTS = rsbackup.$(OBJEXT) $(am__objects_1)
rsbackup_OBJECTS = $(am_rsbackup_OBJECTS)
am__DEPENDENCIES_1 =
rsbackup_DEPENDENCIES = librsbackup.a $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1)
am_rsbackup_graph_OBJECTS = rsbackup-graph.$(OBJEXT) $(am__objects_1)
rsbackup_graph_OBJECTS = $(am_rsbackup_graph_OBJECTS)
rsbackup_graph_DEPENDENCIES = librsbackup.a $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1)
am_test_action_OBJECTS = test-action.$(OBJEXT)
test_action_OBJECTS = $(am_test_action_OBJECTS)
test_action_DEPENDENCIES = librsbackup.a $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1)
am_test_base64_OBJECTS = test-base64.$(OBJEXT)
test_base64_OBJECTS = $(am_test_base64_OBJECTS)
test_base64_DEPENDENCIES = librsbackup.a
am_test_check_OBJECTS = test-check.$(OBJEXT)
test_check_OBJECTS = $(am_test_check_OBJECTS)
test_check_DEPENDENCIES = librsbackup.a $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1)
am_test_color_OBJECTS = test-color.$(OBJEXT)
test_color_OBJECTS = $(am_test_color_OBJECTS)
test_color_DEPENDENCIES = librsbackup.a
am_test_command_OBJECTS = test-command.$(OBJEXT)
test_command_OBJECTS = $(am_test_command_OBJECTS)
test_command_DEPENDENCIES = librsbackup.a $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1)
am_test_confbase_OBJECTS = test-confbase.$(OBJEXT)
test_confbase_OBJECTS = $(am_test_confbase_OBJECTS)
test_confbase_DEPENDENCIES = librsbackup.a
am_test_database_OBJECTS = test-database.$(OBJEXT)
test_database_OBJECTS = $(am_test_database_OBJECTS)
test_database_DEPENDENCIES = librsbackup.a $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1)
am_test_date_OBJECTS = test-date.$(OBJEXT)
test_date_OBJECTS = $(am_test_date_OBJECTS)
test_date_DEPENDENCIES = librsbackup.a
am_test_device_OBJECTS = test-device.$(OBJEXT)
test_device_OBJECTS = $(am_test_device_OBJECTS)
test_device_DEPENDENCIES = librsbackup.a
am_test_directory_OBJECTS = test-directory.$(OBJEXT)
test_directory_OBJECTS = $(am_test_directory_OBJECTS)
test_directory_DEPENDENCIES = librsbackup.a
am_test_eventloop_OBJECTS = test-eventloop.$(OBJEXT) \
	EventLoop.$(OBJEXT)
test_eventloop_OBJECTS = $(am_test_eventloop_OBJECTS)
test_eventloop_DEPENDENCIES = librsbackup.a
am_test_globfiles_OBJECTS = test-globfiles.$(OBJEXT)
test_globfiles_OBJECTS = $(am_test_globfiles_OBJECTS)
test_globfiles_DEPENDENCIES = librsbackup.a
am_test_host_OBJECTS = test-host.$(OBJEXT)
test_host_OBJECTS = $(am_test_host_OBJECTS)
test_host_DEPENDENCIES = librsbackup.a $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1)
am_test_indent_OBJECTS = test-indent.$(OBJEXT)
test_indent_OBJECTS = $(am_test_indent_OBJECTS)
test_indent_DEPENDENCIES = librsbackup.a
am_test_io_OBJECTS = test-io.$(OBJEXT)
test_io_OBJECTS = $(am_test_io_OBJECTS)
test_io_DEPENDENCIES = librsbackup.a
am_test_lock_OBJECTS = test-lock.$(OBJEXT)
test_lock_OBJECTS = $(am_test_lock_OBJECTS)
test_lock_DEPENDENCIES = librsbackup.a
am_test_parseinteger_OBJECTS = test-parseinteger.$(OBJEXT)
test_parseinteger_OBJECTS = $(am_test_parseinteger_OBJECTS)
test_parseinteger_DEPENDENCIES = librsbackup.a
am_test_progress_OBJECTS = test-progress.$(OBJEXT)
test_progress_OBJECTS = $(am_test_progress_OBJECTS)
test_progress_DEPENDENCIES = librsbackup.a
am_test_prunedecay_OBJECTS = test-prunedecay.$(OBJEXT) \
	PrunePolicyDecay.$(OBJEXT)
test_prunedecay_OBJECTS = $(am_test_prunedecay_OBJECTS)
test_prunedecay_DEPENDENCIES = librsbackup.a $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1)
am_test_select_OBJECTS = test-select.$(OBJEXT)
test_select_OBJECTS = $(am_test_select_OBJECTS)
test_select_DEPENDENCIES = librsbackup.a $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1)
am_test_split_OBJECTS = test-split.$(OBJEXT)
test_split_OBJECTS = $(am_test_split_OBJECTS)
test_split_DEPENDENCIES = librsbackup.a
am_test_subprocess_OBJECTS = test-subprocess.$(OBJEXT) \
	Subprocess.$(OBJEXT) Errors.$(OBJEXT) IO.$(OBJEXT) \
	EventLoop.$(OBJEXT) nonblock.$(OBJEXT) Action.$(OBJEXT) \
	timestamp.$(OBJEXT) debug.$(OBJEXT)
test_subprocess_OBJECTS = $(am_test_subprocess_OBJECTS)
test_subprocess_LDADD = $(LDADD)
am_test_timespec_OBJECTS = test-timespec.$(OBJEXT)
test_timespec_OBJECTS = $(am_test_timespec_OBJECTS)
test_timespec_DEPENDENCIES = librsbackup.a
am_test_tolines_OBJECTS = test-tolines.$(OBJEXT)
test_tolines_OBJECTS = $(am_test_tolines_OBJECTS)
test_tolines_DEPENDENCIES = librsbackup.a
am_test_unicode_OBJECTS = test-unicode.$(OBJEXT)
test_unicode_OBJECTS = $(am_test_unicode_OBJECTS)
test_unicode_DEPENDENCIES = librsbackup.a
am_test_volume_OBJECTS = test-volume.$(OBJEXT)
test_volume_OBJECTS = $(am_test_volume_OBJECTS)
test_volume_DEPENDENCIES = librsbackup.a $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1)
SCRIPTS = $(dist_noinst_SCRIPTS)
AM_V_P = $(am__v_P_@AM_V@)
am__v_P_ = $(am__v_P_@AM_DEFAULT_V@)
am__v_P_0 = false
am__v_P_1 = :
AM_V_GEN = $(am__v_GEN_@AM_V@)
am__v_GEN_ = $(am__v_GEN_@AM_DEFAULT_V@)
am__v_GEN_0 = @echo "  GEN     " $@;
am__v_GEN_1 = 
AM_V_at = $(am__v_at_@AM_V@)
am__v_at_ = $(am__v_at_@AM_DEFAULT_V@)
am__v_at_0 = @
am__v_at_1 = 
DEFAULT_INCLUDES = -I.@am__isrc@ -I$(top_builddir)
depcomp = $(SHELL) $(top_srcdir)/config.aux/depcomp
am__maybe_remake_depfiles = depfiles
am__depfiles_remade = ./$(DEPDIR)/Action.Po ./$(DEPDIR)/Backup.Po \
	./$(DEPDIR)/BackupPolicy.Po ./$(DEPDIR)/BackupPolicyAlways.Po \
	./$(DEPDIR)/BackupPolicyDaily.Po \
	./$(DEPDIR)/BackupPolicyInterval.Po ./$(DEPDIR)/BulkRemove.Po \
	./$(DEPDIR)/Check.Po ./$(DEPDIR)/Color.Po \
	./$(DEPDIR)/ColorStrategy.Po ./$(DEPDIR)/Command.Po \
	./$(DEPDIR)/Conf.Po ./$(DEPDIR)/ConfBase.Po \
	./$(DEPDIR)/ConfDirective.Po ./$(DEPDIR)/Database.Po \
	./$(DEPDIR)/Date.Po ./$(DEPDIR)/Device.Po \
	./$(DEPDIR)/DeviceAccess.Po ./$(DEPDIR)/Directory.Po \
	./$(DEPDIR)/Document.Po ./$(DEPDIR)/Email.Po \
	./$(DEPDIR)/Errors.Po ./$(DEPDIR)/EventLoop.Po \
	./$(DEPDIR)/FileLock.Po ./$(DEPDIR)/HTML.Po \
	./$(DEPDIR)/HistoryGraph.Po ./$(DEPDIR)/Host.Po \
	./$(DEPDIR)/IO.Po ./$(DEPDIR)/Indent.Po \
	./$(DEPDIR)/MakeBackup.Po ./$(DEPDIR)/Progress.Po \
	./$(DEPDIR)/Prune.Po ./$(DEPDIR)/PrunePolicy.Po \
	./$(DEPDIR)/PrunePolicyAge.Po ./$(DEPDIR)/PrunePolicyDecay.Po \
	./$(DEPDIR)/PrunePolicyExec.Po ./$(DEPDIR)/PrunePolicyNever.Po \
	./$(DEPDIR)/Render.Po ./$(DEPDIR)/Report.Po \
	./$(DEPDIR)/RetireDevices.Po ./$(DEPDIR)/RetireVolumes.Po \
	./$(DEPDIR)/Selection.Po ./$(DEPDIR)/Store.Po \
	./$(DEPDIR)/Subprocess.Po ./$(DEPDIR)/Text.Po \
	./$(DEPDIR)/Unicode.Po ./$(DEPDIR)/Volume.Po \
	./$(DEPDIR)/base64.Po ./$(DEPDIR)/debug.Po \
	./$(DEPDIR)/error.Po ./$(DEPDIR)/globFiles.Po \
	./$(DEPDIR)/nonblock.Po ./$(DEPDIR)/parseFloat.Po \
	./$(DEPDIR)/parseInteger.Po ./$(DEPDIR)/rsbackup-graph.Po \
	./$(DEPDIR)/rsbackup.Po ./$(DEPDIR)/split.Po \
	./$(DEPDIR)/stylesheet.Po ./$(DEPDIR)/substitute.Po \
	./$(DEPDIR)/test-action.Po ./$(DEPDIR)/test-base64.Po \
	./$(DEPDIR)/test-check.Po ./$(DEPDIR)/test-color.Po \
	./$(DEPDIR)/test-command.Po ./$(DEPDIR)/test-confbase.Po \
	./$(DEPDIR)/test-database.Po ./$(DEPDIR)/test-date.Po \
	./$(DEPDIR)/test-device.Po ./$(DEPDIR)/test-directory.Po \
	./$(DEPDIR)/test-eventloop.Po ./$(DEPDIR)/test-globfiles.Po \
	./$(DEPDIR)/test-host.Po ./$(DEPDIR)/test-indent.Po \
	./$(DEPDIR)/test-io.Po ./$(DEPDIR)/test-lock.Po \
	./$(DEPDIR)/test-parseinteger.Po ./$(DEPDIR)/test-progress.Po \
	./$(DEPDIR)/test-prunedecay.Po ./$(DEPDIR)/test-select.Po \
	./$(DEPDIR)/test-split.Po ./$(DEPDIR)/test-subprocess.Po \
	./$(DEPDIR)/test-timespec.Po ./$(DEPDIR)/test-tolines.Po \
	./$(DEPDIR)/test-unicode.Po ./$(DEPDIR)/test-volume.Po \
	./$(DEPDIR)/timestamp.Po ./$(DEPDIR)/toLines.Po
am__mv = mv -f
CXXCOMPILE = $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS)
AM_V_CXX = $(am__v_CXX_@AM_V@)
am__v_CXX_ = $(am__v_CXX_@AM_DEFAULT_V@)
am__v_CXX_0 = @echo "  CXX     " $@;
am__v_CXX_1 = 
CXXLD = $(CXX)
CXXLINK = $(CXXLD) $(AM_CXXFLAGS) $(CXXFLAGS) $(AM_LDFLAGS) $(LDFLAGS) \
	-o $@
AM_V_CXXLD = $(am__v_CXXLD_@AM_V@)
am__v_CXXLD_ = $(am__v_CXXLD_@AM_DEFAULT_V@)
am__v_CXXLD_0 = @echo "  CXXLD   " $@;
am__v_CXXLD_1 = 
COMPILE = $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) \
	$(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
AM_V_CC = $(am__v_CC_@AM_V@)
am__v_CC_ = $(am__v_CC_@AM_DEFAULT_V@)
am__v_CC_0 = @echo "  CC      " $@;
am__v_CC_1 = 
CCLD = $(CC)
LINK = $(CCLD) $(AM_CFLAGS) $(CFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@
AM_V_CCLD = $(am__v_CCLD_@AM_V@)
am__v_CCLD_ = $(am__v_CCLD_@AM_DEFAULT_V@)
am__v_CCLD_0 = @echo "  CCLD    " $@;
am__v_CCLD_1 = 
SOURCES = $(librsbackup_a_SOURCES) $(rsbackup_SOURCES) \
	$(rsbackup_graph_SOURCES) $(test_action_SOURCES) \
	$(test_base64_SOURCES) $(test_check_SOURCES) \
	$(test_color_SOURCES) $(test_command_SOURCES) \
	$(test_confbase_SOURCES) $(test_database_SOURCES) \
	$(test_date_SOURCES) $(test_device_SOURCES) \
	$(test_directory_SOURCES) $(test_eventloop_SOURCES) \
	$(test_globfiles_SOURCES) $(test_host_SOURCES) \
	$(test_indent_SOURCES) $(test_io_SOURCES) $(test_lock_SOURCES) \
	$(test_parseinteger_SOURCES) $(test_progress_SOURCES) \
	$(test_prunedecay_SOURCES) $(test_select_SOURCES) \
	$(test_split_SOURCES) $(test_subprocess_SOURCES) \
	$(test_timespec_SOURCES) $(test_tolines_SOURCES) \
	$(test_unicode_SOURCES) $(test_volume_SOURCES)
DIST_SOURCES = $(librsbackup_a_SOURCES) $(rsbackup_SOURCES) \
	$(rsbackup_graph_SOURCES) $(test_action_SOURCES) \
	$(test_base64_SOURCES) $(test_check_SOURCES) \
	$(test_color_SOURCES) $(test_command_SOURCES) \
	$(test_confbase_SOURCES) $(test_database_SOURCES) \
	$(test_date_SOURCES) $(test_device_SOURCES) \
	$(test_directory_SOURCES) $(test_eventloop_SOURCES) \
	$(test_globfiles_SOURCES) $(test_host_SOURCES) \
	$(test_indent_SOURCES) $(test_io_SOURCES) $(test_lock_SOURCES) \
	$(test_parseinteger_SOURCES) $(test_progress_SOURCES) \
	$(test_prunedecay_SOURCES) $(test_select_SOURCES) \
	$(test_split_SOURCES) $(test_subprocess_SOURCES) \
	$(test_timespec_SOURCES) $(test_tolines_SOURCES) \
	$(test_unicode_SOURCES) $(test_volume_SOURCES)
am__can_run_installinfo = \
  case $$AM_UPDATE_INFO_DIR in \
    n|no|NO) false;; \
    *) (install-info --version) >/dev/null 2>&1;; \
  esac
am__tagged_files = $(HEADERS) $(SOURCES) $(TAGS_FILES) $(LISP)
# Read a list of newline-separated strings from the standard input,
# and print each of them once, without duplicates.  Input order is
# *not* preserved.
am__uniquify_input = $(AWK) '\
  BEGIN { nonempty = 0; } \
  { items[$$0] = 1; nonempty = 1; } \
  END { if (nonempty) { for (i in items) print i; }; } \
'
# Make sure the list of sources is unique.  This is necessary because,
# e.g., the same source file might be shared among _SOURCES variables
# for different programs/libraries.
am__define_uniq_tagged_files = \
  list='$(am__tagged_files)'; \
  unique=`for i in $$list; do \
    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
  done | $(am__uniquify_input)`
ETAGS = etags
CTAGS = ctags
am__tty_colors_dummy = \
  mgn= red= grn= lgn= blu= brg= std=; \
  am__color_tests=no
am__tty_colors = { \
  $(am__tty_colors_dummy); \
  if test "X$(AM_COLOR_TESTS)" = Xno; then \
    am__color_tests=no; \
  elif test "X$(AM_COLOR_TESTS)" = Xalways; then \
    am__color_tests=yes; \
  elif test "X$$TERM" != Xdumb && { test -t 1; } 2>/dev/null; then \
    am__color_tests=yes; \
  fi; \
  if test $$am__color_tests = yes; then \
    red='[0;31m'; \
    grn='[0;32m'; \
    lgn='[1;32m'; \
    blu='[1;34m'; \
    mgn='[0;35m'; \
    brg='[1m'; \
    std='[m'; \
  fi; \
}
am__vpath_adj_setup = srcdirstrip=`echo "$(srcdir)" | sed 's|.|.|g'`;
am__vpath_adj = case $$p in \
    $(srcdir)/*) f=`echo "$$p" | sed "s|^$$srcdirstrip/||"`;; \
    *) f=$$p;; \
  esac;
am__strip_dir = f=`echo $$p | sed -e 's|^.*/||'`;
am__install_max = 40
am__nobase_strip_setup = \
  srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*|]/\\\\&/g'`
am__nobase_strip = \
  for p in $$list; do echo "$$p"; done | sed -e "s|$$srcdirstrip/||"
am__nobase_list = $(am__nobase_strip_setup); \
  for p in $$list; do echo "$$p $$p"; done | \
  sed "s| $$srcdirstrip/| |;"' / .*\//!s/ .*/ ./; s,\( .*\)/[^/]*$$,\1,' | \
  $(AWK) 'BEGIN { files["."] = "" } { files[$$2] = files[$$2] " " $$1; \
    if (++n[$$2] == $(am__install_max)) \
      { print $$2, files[$$2]; n[$$2] = 0; files[$$2] = "" } } \
    END { for (dir in files) print dir, files[dir] }'
am__base_list = \
  sed '$$!N;$$!N;$$!N;$$!N;$$!N;$$!N;$$!N;s/\n/ /g' | \
  sed '$$!N;$$!N;$$!N;$$!N;s/\n/ /g'
am__uninstall_files_from_dir = { \
  test -z "$$files" \
    || { test ! -d "$$dir" && test ! -f "$$dir" && test ! -r "$$dir"; } \
    || { echo " ( cd '$$dir' && rm -f" $$files ")"; \
         $(am__cd) "$$dir" && rm -f $$files; }; \
  }
am__recheck_rx = ^[ 	]*:recheck:[ 	]*
am__global_test_result_rx = ^[ 	]*:global-test-result:[ 	]*
am__copy_in_global_log_rx = ^[ 	]*:copy-in-global-log:[ 	]*
# A command that, given a newline-separated list of test names on the
# standard input, print the name of the tests that are to be re-run
# upon "make recheck".
am__list_recheck_tests = $(AWK) '{ \
  recheck = 1; \
  while ((rc = (getline line < ($$0 ".trs"))) != 0) \
    { \
      if (rc < 0) \
        { \
          if ((getline line2 < ($$0 ".log")) < 0) \
	    recheck = 0; \
          break; \
        } \
      else if (line ~ /$(am__recheck_rx)[nN][Oo]/) \
        { \
          recheck = 0; \
          break; \
        } \
      else if (line ~ /$(am__recheck_rx)[yY][eE][sS]/) \
        { \
          break; \
        } \
    }; \
  if (recheck) \
    print $$0; \
  close ($$0 ".trs"); \
  close ($$0 ".log"); \
}'
# A command that, given a newline-separated list of test names on the
# standard input, create the global log from their .trs and .log files.
am__create_global_log = $(AWK) ' \
function fatal(msg) \
{ \
  print "fatal: making $@: " msg | "cat >&2"; \
  exit 1; \
} \
function rst_section(header) \
{ \
  print header; \
  len = length(header); \
  for (i = 1; i <= len; i = i + 1) \
    printf "="; \
  printf "\n\n"; \
} \
{ \
  copy_in_global_log = 1; \
  global_test_result = "RUN"; \
  while ((rc = (getline line < ($$0 ".trs"))) != 0) \
    { \
      if (rc < 0) \
         fatal("failed to read from " $$0 ".trs"); \
      if (line ~ /$(am__global_test_result_rx)/) \
        { \
          sub("$(am__global_test_result_rx)", "", line); \
          sub("[ 	]*$$", "", line); \
          global_test_result = line; \
        } \
      else if (line ~ /$(am__copy_in_global_log_rx)[nN][oO]/) \
        copy_in_global_log = 0; \
    }; \
  if (copy_in_global_log) \
    { \
      rst_section(global_test_result ": " $$0); \
      while ((rc = (getline line < ($$0 ".log"))) != 0) \
      { \
        if (rc < 0) \
          fatal("failed to read from " $$0 ".log"); \
        print line; \
      }; \
      printf "\n"; \
    }; \
  close ($$0 ".trs"); \
  close ($$0 ".log"); \
}'
# Restructured Text title.
am__rst_title = { sed 's/.*/   &   /;h;s/./=/g;p;x;s/ *$$//;p;g' && echo; }
# Solaris 10 'make', and several other traditional 'make' implementations,
# pass "-e" to $(SHELL), and POSIX 2008 even requires this.  Work around it
# by disabling -e (using the XSI extension "set +e") if it's set.
am__sh_e_setup = case $$- in *e*) set +e;; esac
# Default flags passed to test drivers.
am__common_driver_flags = \
  --color-tests "$$am__color_tests" \
  --enable-hard-errors "$$am__enable_hard_errors" \
  --expect-failure "$$am__expect_failure"
# To be inserted before the command running the test.  Creates the
# directory for the log if needed.  Stores in $dir the directory
# containing $f, in $tst the test, in $log the log.  Executes the
# developer- defined test setup AM_TESTS_ENVIRONMENT (if any), and
# passes TESTS_ENVIRONMENT.  Set up options for the wrapper that
# will run the test scripts (or their associated LOG_COMPILER, if
# thy have one).
am__check_pre = \
$(am__sh_e_setup);					\
$(am__vpath_adj_setup) $(am__vpath_adj)			\
$(am__tty_colors);					\
srcdir=$(srcdir); export srcdir;			\
case "$@" in						\
  */*) am__odir=`echo "./$@" | sed 's|/[^/]*$$||'`;;	\
    *) am__odir=.;; 					\
esac;							\
test "x$$am__odir" = x"." || test -d "$$am__odir" 	\
  || $(MKDIR_P) "$$am__odir" || exit $$?;		\
if test -f "./$$f"; then dir=./;			\
elif test -f "$$f"; then dir=;				\
else dir="$(srcdir)/"; fi;				\
tst=$$dir$$f; log='$@'; 				\
if test -n '$(DISABLE_HARD_ERRORS)'; then		\
  am__enable_hard_errors=no; 				\
else							\
  am__enable_hard_errors=yes; 				\
fi; 							\
case " $(XFAIL_TESTS) " in				\
  *[\ \	]$$f[\ \	]* | *[\ \	]$$dir$$f[\ \	]*) \
    am__expect_failure=yes;;				\
  *)							\
    am__expect_failure=no;;				\
esac; 							\
$(AM_TESTS_ENVIRONMENT) $(TESTS_ENVIRONMENT)
# A shell command to get the names of the tests scripts with any registered
# extension removed (i.e., equivalently, the names of the test logs, with
# the '.log' extension removed).  The result is saved in the shell variable
# '$bases'.  This honors runtime overriding of TESTS and TEST_LOGS.  Sadly,
# we cannot use something simpler, involving e.g., "$(TEST_LOGS:.log=)",
# since that might cause problem with VPATH rewrites for suffix-less tests.
# See also 'test-harness-vpath-rewrite.sh' and 'test-trs-basic.sh'.
am__set_TESTS_bases = \
  bases='$(TEST_LOGS)'; \
  bases=`for i in $$bases; do echo $$i; done | sed 's/\.log$$//'`; \
  bases=`echo $$bases`
RECHECK_LOGS = $(TEST_LOGS)
AM_RECURSIVE_TARGETS = check recheck
TEST_SUITE_LOG = test-suite.log
TEST_EXTENSIONS = @EXEEXT@ .test
LOG_DRIVER = $(SHELL) $(top_srcdir)/config.aux/test-driver
LOG_COMPILE = $(LOG_COMPILER) $(AM_LOG_FLAGS) $(LOG_FLAGS)
am__set_b = \
  case '$@' in \
    */*) \
      case '$*' in \
        */*) b='$*';; \
          *) b=`echo '$@' | sed 's/\.log$$//'`; \
       esac;; \
    *) \
      b='$*';; \
  esac
am__test_logs1 = $(TESTS:=.log)
am__test_logs2 = $(am__test_logs1:@EXEEXT@.log=.log)
TEST_LOGS = $(am__test_logs2:.test.log=.log)
TEST_LOG_DRIVER = $(SHELL) $(top_srcdir)/config.aux/test-driver
TEST_LOG_COMPILE = $(TEST_LOG_COMPILER) $(AM_TEST_LOG_FLAGS) \
	$(TEST_LOG_FLAGS)
am__DIST_COMMON = $(srcdir)/Makefile.in \
	$(top_srcdir)/config.aux/depcomp \
	$(top_srcdir)/config.aux/test-driver
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
ACLOCAL = @ACLOCAL@
AMTAR = @AMTAR@
AM_DEFAULT_VERBOSITY = @AM_DEFAULT_VERBOSITY@
AR = @AR@
AUTOCONF = @AUTOCONF@
AUTOHEADER = @AUTOHEADER@
AUTOMAKE = @AUTOMAKE@
AWK = @AWK@
BOOST_LIBS = @BOOST_LIBS@
CAIROMM_CFLAGS = @CAIROMM_CFLAGS@
CAIROMM_LIBS = @CAIROMM_LIBS@
CC = @CC@
CCDEPMODE = @CCDEPMODE@
CFLAGS = @CFLAGS@
CPPFLAGS = @CPPFLAGS@
CXX = @CXX@
CXXCPP = @CXXCPP@
CXXDEPMODE = @CXXDEPMODE@
CXXFLAGS = @CXXFLAGS@
CYGPATH_W = @CYGPATH_W@
DEFS = @DEFS@
DEPDIR = @DEPDIR@
ECHO_C = @ECHO_C@
ECHO_N = @ECHO_N@
ECHO_T = @ECHO_T@
EGREP = @EGREP@
EXEEXT = @EXEEXT@
FINAL_CXXFLAGS = @FINAL_CXXFLAGS@
GCOV = @GCOV@
GREP = @GREP@
INSTALL = @INSTALL@
INSTALL_DATA = @INSTALL_DATA@
INSTALL_PROGRAM = @INSTALL_PROGRAM@
INSTALL_SCRIPT = @INSTALL_SCRIPT@
INSTALL_STRIP_PROGRAM = @INSTALL_STRIP_PROGRAM@
LDFLAGS = @LDFLAGS@
LIBOBJS = @LIBOBJS@
LIBPTHREAD = @LIBPTHREAD@
LIBS = @LIBS@
LTLIBOBJS = @LTLIBOBJS@
MAKEINFO = @MAKEINFO@
MKDIR_P = @MKDIR_P@
OBJEXT = @OBJEXT@
PACKAGE = @PACKAGE@
PACKAGE_BUGREPORT = @PACKAGE_BUGREPORT@
PACKAGE_NAME = @PACKAGE_NAME@
PACKAGE_STRING = @PACKAGE_STRING@
PACKAGE_TARNAME = @PACKAGE_TARNAME@
PACKAGE_URL = @PACKAGE_URL@
PACKAGE_VERSION = @PACKAGE_VERSION@
PANGOMM_CFLAGS = @PANGOMM_CFLAGS@
PANGOMM_LIBS = @PANGOMM_LIBS@
PATH_SEPARATOR = @PATH_SEPARATOR@
PKG_CONFIG = @PKG_CONFIG@
PKG_CONFIG_LIBDIR = @PKG_CONFIG_LIBDIR@
PKG_CONFIG_PATH = @PKG_CONFIG_PATH@
RANLIB = @RANLIB@
SET_MAKE = @SET_MAKE@
SHELL = @SHELL@
SQLITE3_CFLAGS = @SQLITE3_CFLAGS@
SQLITE3_LIBS = @SQLITE3_LIBS@
STRIP = @STRIP@
VERSION = @VERSION@
abs_builddir = @abs_builddir@
abs_srcdir = @abs_srcdir@
abs_top_builddir = @abs_top_builddir@
abs_top_srcdir = @abs_top_srcdir@
ac_ct_AR = @ac_ct_AR@
ac_ct_CC = @ac_ct_CC@
ac_ct_CXX = @ac_ct_CXX@
am__include = @am__include@
am__leading_dot = @am__leading_dot@
am__quote = @am__quote@
am__tar = @am__tar@
am__untar = @am__untar@
bindir = @bindir@
build = @build@
build_alias = @build_alias@
build_cpu = @build_cpu@
build_os = @build_os@
build_vendor = @build_vendor@
builddir = @builddir@
datadir = @datadir@
datarootdir = @datarootdir@
docdir = @docdir@
dvidir = @dvidir@
exec_prefix = @exec_prefix@
host = @host@
host_alias = @host_alias@
host_cpu = @host_cpu@
host_os = @host_os@
host_vendor = @host_vendor@
htmldir = @htmldir@
includedir = @includedir@
infodir = @infodir@
install_sh = @install_sh@
libdir = @libdir@
libexecdir = @libexecdir@
localedir = @localedir@
localstatedir = @localstatedir@
mandir = @mandir@
mkdir_p = @mkdir_p@
oldincludedir = @oldincludedir@
pdfdir = @pdfdir@
prefix = @prefix@
program_transform_name = @program_transform_name@
psdir = @psdir@
runstatedir = @runstatedir@
sbindir = @sbindir@
sharedstatedir = @sharedstatedir@
srcdir = @srcdir@
sysconfdir = @sysconfdir@
target_alias = @target_alias@
top_build_prefix = @top_build_prefix@
top_builddir = @top_builddir@
top_srcdir = @top_srcdir@

# Copyright © 2011, 2012, 2014-2017 Richard Kettlewell.
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.
noinst_LIBRARIES = librsbackup.a
dist_noinst_SCRIPTS = check-source
TAG := $(shell git describe --tags --dirty)
AM_CXXFLAGS = $(SQLITE3_CFLAGS) $(CAIROMM_CFLAGS) $(PANGOMM_CFLAGS) $(FINAL_CXXFLAGS) -DTAG=\"${TAG}\"
librsbackup_a_SOURCES = Backup.cc BulkRemove.cc Check.cc Command.cc	\
Conf.cc \
Date.cc DeviceAccess.cc Device.cc Directory.cc Document.cc Email.cc	\
error.cc Errors.cc FileLock.cc Host.cc HTML.cc IO.cc MakeBackup.cc	\
Progress.cc Prune.h Prune.cc PrunePolicy.h PrunePolicy.cc Report.cc \
RetireDevices.cc RetireVolumes.cc Store.cc stylesheet.cc	\
Subprocess.cc Text.cc Unicode.cc Volume.cc Command.h Conf.h Date.h	\
Defaults.h DeviceAccess.h Document.h Email.h Errors.h FileLock.h IO.h	\
rsbackup.h Store.h Subprocess.h Utils.h ConfBase.cc		\
toLines.cc globFiles.cc Database.h Database.cc Report.h			\
parseInteger.cc split.cc EventLoop.cc EventLoop.h nonblock.cc		\
Action.cc Action.h BulkRemove.h Selection.h Selection.cc Color.h 	\
Color.cc parseFloat.cc Render.h Render.cc HistoryGraph.h	\
HistoryGraph.cc ColorStrategy.cc ConfDirective.h ConfDirective.cc	\
base64.cc substitute.cc timestamp.cc debug.cc ConfBase.h Volume.h	\
Host.h Backup.h Device.h Indent.h Indent.cc \
BackupPolicy.h BackupPolicy.cc

POLICIES = PrunePolicyAge.cc PrunePolicyNever.cc PrunePolicyExec.cc \
	PrunePolicyDecay.cc \
	BackupPolicyDaily.cc BackupPolicyAlways.cc BackupPolicyInterval.cc

rsbackup_SOURCES = rsbackup.cc ${POLICIES}
rsbackup_LDADD = librsbackup.a $(SQLITE3_LIBS) $(BOOST_LIBS)
rsbackup_graph_SOURCES = rsbackup-graph.cc ${POLICIES}
rsbackup_graph_LDADD = librsbackup.a $(SQLITE3_LIBS) $(BOOST_LIBS) $(CAIROMM_LIBS) $(PANGOMM_LIBS)
test_date_SOURCES = test-date.cc
test_date_LDADD = librsbackup.a
test_color_SOURCES = test-color.cc
test_color_LDADD = librsbackup.a
test_subprocess_SOURCES = test-subprocess.cc Subprocess.cc Errors.cc IO.cc \
	EventLoop.cc nonblock.cc Action.cc timestamp.cc debug.cc

test_unicode_SOURCES = test-unicode.cc
test_unicode_LDADD = librsbackup.a
test_io_SOURCES = test-io.cc
test_io_LDADD = librsbackup.a
test_directory_SOURCES = test-directory.cc
test_directory_LDADD = librsbackup.a
test_timespec_SOURCES = test-timespec.cc
test_timespec_LDADD = librsbackup.a
test_command_SOURCES = test-command.cc
test_command_LDADD = librsbackup.a $(SQLITE3_LIBS) $(BOOST_LIBS)
test_select_SOURCES = test-select.cc
test_select_LDADD = librsbackup.a $(SQLITE3_LIBS) $(BOOST_LIBS)
test_confbase_SOURCES = test-confbase.cc
test_confbase_LDADD = librsbackup.a
test_check_SOURCES = test-check.cc
test_check_LDADD = librsbackup.a $(LIBPTHREAD) $(SQLITE3_LIBS) $(BOOST_LIBS)
test_device_SOURCES = test-device.cc
test_device_LDADD = librsbackup.a
test_host_SOURCES = test-host.cc
test_host_LDADD = librsbackup.a $(SQLITE3_LIBS) $(BOOST_LIBS)
test_volume_SOURCES = test-volume.cc
test_volume_LDADD = librsbackup.a $(SQLITE3_LIBS) $(BOOST_LIBS)
test_progress_SOURCES = test-progress.cc
test_progress_LDADD = librsbackup.a
test_database_SOURCES = test-database.cc
test_database_LDADD = librsbackup.a $(SQLITE3_LIBS) $(BOOST_LIBS)
test_tolines_SOURCES = test-tolines.cc
test_tolines_LDADD = librsbackup.a
test_globfiles_SOURCES = test-globfiles.cc
test_globfiles_LDADD = librsbackup.a
test_lock_SOURCES = test-lock.cc
test_lock_LDADD = librsbackup.a
test_split_SOURCES = test-split.cc
test_split_LDADD = librsbackup.a
test_parseinteger_SOURCES = test-parseinteger.cc
test_parseinteger_LDADD = librsbackup.a
test_prunedecay_SOURCES = test-prunedecay.cc PrunePolicyDecay.cc
test_prunedecay_LDADD = librsbackup.a $(SQLITE3_LIBS) $(BOOST_LIBS)
test_eventloop_SOURCES = test-eventloop.cc EventLoop.cc
test_eventloop_LDADD = librsbackup.a
test_base64_SOURCES = test-base64.cc
test_base64_LDADD = librsbackup.a
test_indent_SOURCES = test-indent.cc
test_indent_LDADD = librsbackup.a
test_action_SOURCES = test-action.cc
test_action_LDADD = librsbackup.a $(SQLITE3_LIBS) $(BOOST_LIBS)
all: all-am

.SUFFIXES:
.SUFFIXES: .cc .log .o .obj .test .test$(EXEEXT) .trs
$(srcdir)/Makefile.in:  $(srcdir)/Makefile.am  $(am__configure_deps)
	@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      ( cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh ) \
	        && { if test -f $@; then exit 0; else break; fi; }; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --foreign src/Makefile'; \
	$(am__cd) $(top_srcdir) && \
	  $(AUTOMAKE) --foreign src/Makefile
Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
	@case '$?' in \
	  *config.status*) \
	    cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh;; \
	  *) \
	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__maybe_remake_depfiles)'; \
	    cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__maybe_remake_depfiles);; \
	esac;

$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh

$(top_srcdir)/configure:  $(am__configure_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(ACLOCAL_M4):  $(am__aclocal_m4_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(am__aclocal_m4_deps):
install-binPROGRAMS: $(bin_PROGRAMS)
	@$(NORMAL_INSTALL)
	@list='$(bin_PROGRAMS)'; test -n "$(bindir)" || list=; \
	if test -n "$$list"; then \
	  echo " $(MKDIR_P) '$(DESTDIR)$(bindir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(bindir)" || exit 1; \
	fi; \
	for p in $$list; do echo "$$p $$p"; done | \
	sed 's/$(EXEEXT)$$//' | \
	while read p p1; do if test -f $$p \
	  ; then echo "$$p"; echo "$$p"; else :; fi; \
	done | \
	sed -e 'p;s,.*/,,;n;h' \
	    -e 's|.*|.|' \
	    -e 'p;x;s,.*/,,;s/$(EXEEXT)$$//;$(transform);s/$$/$(EXEEXT)/' | \
	sed 'N;N;N;s,\n, ,g' | \
	$(AWK) 'BEGIN { files["."] = ""; dirs["."] = 1 } \
	  { d=$$3; if (dirs[d] != 1) { print "d", d; dirs[d] = 1 } \
	    if ($$2 == $$4) files[d] = files[d] " " $$1; \
	    else { print "f", $$3 "/" $$4, $$1; } } \
	  END { for (d in files) print "f", d, files[d] }' | \
	while read type dir files; do \
	    if test "$$dir" = .; then dir=; else dir=/$$dir; fi; \
	    test -z "$$files" || { \
	      echo " $(INSTALL_PROGRAM_ENV) $(INSTALL_PROGRAM) $$files '$(DESTDIR)$(bindir)$$dir'"; \
	      $(INSTALL_PROGRAM_ENV) $(INSTALL_PROGRAM) $$files "$(DESTDIR)$(bindir)$$dir" || exit $$?; \
	    } \
	; done

uninstall-binPROGRAMS:
	@$(NORMAL_UNINSTALL)
	@list='$(bin_PROGRAMS)'; test -n "$(bindir)" || list=; \
	files=`for p in $$list; do echo "$$p"; done | \
	  sed -e 'h;s,^.*/,,;s/$(EXEEXT)$$//;$(transform)' \
	      -e 's/$$/$(EXEEXT)/' \
	`; \
	test -n "$$list" || exit 0; \
	echo " ( cd '$(DESTDIR)$(bindir)' && rm -f" $$files ")"; \
	cd "$(DESTDIR)$(bindir)" && rm -f $$files

clean-binPROGRAMS:
	-test -z "$(bin_PROGRAMS)" || rm -f $(bin_PROGRAMS)

clean-noinstPROGRAMS:
	-test -z "$(noinst_PROGRAMS)" || rm -f $(noinst_PROGRAMS)

clean-noinstLIBRARIES:
	-test -z "$(noinst_LIBRARIES)" || rm -f $(noinst_LIBRARIES)

librsbackup.a: $(librsbackup_a_OBJECTS) $(librsbackup_a_DEPENDENCIES) $(EXTRA_librsbackup_a_DEPENDENCIES) 
	$(AM_V_at)-rm -f librsbackup.a
	$(AM_V_AR)$(librsbackup_a_AR) librsbackup.a $(librsbackup_a_OBJECTS) $(librsbackup_a_LIBADD)
	$(AM_V_at)$(RANLIB) librsbackup.a

rsbackup$(EXEEXT): $(rsbackup_OBJECTS) $(rsbackup_DEPENDENCIES) $(EXTRA_rsbackup_DEPENDENCIES) 
	@rm -f rsbackup$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(rsbackup_OBJECTS) $(rsbackup_LDADD) $(LIBS)

rsbackup-graph$(EXEEXT): $(rsbackup_graph_OBJECTS) $(rsbackup_graph_DEPENDENCIES) $(EXTRA_rsbackup_graph_DEPENDENCIES) 
	@rm -f rsbackup-graph$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(rsbackup_graph_OBJECTS) $(rsbackup_graph_LDADD) $(LIBS)

test-action$(EXEEXT): $(test_action_OBJECTS) $(test_action_DEPENDENCIES) $(EXTRA_test_action_DEPENDENCIES) 
	@rm -f test-action$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(test_action_OBJECTS) $(test_action_LDADD) $(LIBS)

test-base64$(EXEEXT): $(test_base64_OBJECTS) $(test_base64_DEPENDENCIES) $(EXTRA_test_base64_DEPENDENCIES) 
	@rm -f test-base64$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(test_base64_OBJECTS) $(test_base64_LDADD) $(LIBS)

test-check$(EXEEXT): $(test_check_OBJECTS) $(test_check_DEPENDENCIES) $(EXTRA_test_check_DEPENDENCIES) 
	@rm -f test-check$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(test_check_OBJECTS) $(test_check_LDADD) $(LIBS)

test-color$(EXEEXT): $(test_color_OBJECTS) $(test_color_DEPENDENCIES) $(EXTRA_test_color_DEPENDENCIES) 
	@rm -f test-color$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(test_color_OBJECTS) $(test_color_LDADD) $(LIBS)

test-command$(EXEEXT): $(test_command_OBJECTS) $(test_command_DEPENDENCIES) $(EXTRA_test_command_DEPENDENCIES) 
	@rm -f test-command$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(test_command_OBJECTS) $(test_command_LDADD) $(LIBS)

test-confbase$(EXEEXT): $(test_confbase_OBJECTS) $(test_confbase_DEPENDENCIES) $(EXTRA_test_confbase_DEPENDENCIES) 
	@rm -f test-confbase$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(test_confbase_OBJECTS) $(test_confbase_LDADD) $(LIBS)

test-database$(EXEEXT): $(test_database_OBJECTS) $(test_database_DEPENDENCIES) $(EXTRA_test_database_DEPENDENCIES) 
	@rm -f test-database$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(test_database_OBJECTS) $(test_database_LDADD) $(LIBS)

test-date$(EXEEXT): $(test_date_OBJECTS) $(test_date_DEPENDENCIES) $(EXTRA_test_date_DEPENDENCIES) 
	@rm -f test-date$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(test_date_OBJECTS) $(test_date_LDADD) $(LIBS)

test-device$(EXEEXT): $(test_device_OBJECTS) $(test_device_DEPENDENCIES) $(EXTRA_test_device_DEPENDENCIES) 
	@rm -f test-device$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(test_device_OBJECTS) $(test_device_LDADD) $(LIBS)

test-directory$(EXEEXT): $(test_directory_OBJECTS) $(test_directory_DEPENDENCIES) $(EXTRA_test_directory_DEPENDENCIES) 
	@rm -f test-directory$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(test_directory_OBJECTS) $(test_directory_LDADD) $(LIBS)

test-eventloop$(EXEEXT): $(test_eventloop_OBJECTS) $(test_eventloop_DEPENDENCIES) $(EXTRA_test_eventloop_DEPENDENCIES) 
	@rm -f test-eventloop$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(test_eventloop_OBJECTS) $(test_eventloop_LDADD) $(LIBS)

test-globfiles$(EXEEXT): $(test_globfiles_OBJECTS) $(test_globfiles_DEPENDENCIES) $(EXTRA_test_globfiles_DEPENDENCIES) 
	@rm -f test-globfiles$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(test_globfiles_OBJECTS) $(test_globfiles_LDADD) $(LIBS)

test-host$(EXEEXT): $(test_host_OBJECTS) $(test_host_DEPENDENCIES) $(EXTRA_test_host_DEPENDENCIES) 
	@rm -f test-host$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(test_host_OBJECTS) $(test_host_LDADD) $(LIBS)

test-indent$(EXEEXT): $(test_indent_OBJECTS) $(test_indent_DEPENDENCIES) $(EXTRA_test_indent_DEPENDENCIES) 
	@rm -f test-indent$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(test_indent_OBJECTS) $(test_indent_LDADD) $(LIBS)

test-io$(EXEEXT): $(test_io_OBJECTS) $(test_io_DEPENDENCIES) $(EXTRA_test_io_DEPENDENCIES) 
	@rm -f test-io$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(test_io_OBJECTS) $(test_io_LDADD) $(LIBS)

test-lock$(EXEEXT): $(test_lock_OBJECTS) $(test_lock_DEPENDENCIES) $(EXTRA_test_lock_DEPENDENCIES) 
	@rm -f test-lock$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(test_lock_OBJECTS) $(test_lock_LDADD) $(LIBS)

test-parseinteger$(EXEEXT): $(test_parseinteger_OBJECTS) $(test_parseinteger_DEPENDENCIES) $(EXTRA_test_parseinteger_DEPENDENCIES) 
	@rm -f test-parseinteger$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(test_parseinteger_OBJECTS) $(test_parseinteger_LDADD) $(LIBS)

test-progress$(EXEEXT): $(test_progress_OBJECTS) $(test_progress_DEPENDENCIES) $(EXTRA_test_progress_DEPENDENCIES) 
	@rm -f test-progress$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(test_progress_OBJECTS) $(test_progress_LDADD) $(LIBS)

test-prunedecay$(EXEEXT): $(test_prunedecay_OBJECTS) $(test_prunedecay_DEPENDENCIES) $(EXTRA_test_prunedecay_DEPENDENCIES) 
	@rm -f test-prunedecay$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(test_prunedecay_OBJECTS) $(test_prunedecay_LDADD) $(LIBS)

test-select$(EXEEXT): $(test_select_OBJECTS) $(test_select_DEPENDENCIES) $(EXTRA_test_select_DEPENDENCIES) 
	@rm -f test-select$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(test_select_OBJECTS) $(test_select_LDADD) $(LIBS)

test-split$(EXEEXT): $(test_split_OBJECTS) $(test_split_DEPENDENCIES) $(EXTRA_test_split_DEPENDENCIES) 
	@rm -f test-split$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(test_split_OBJECTS) $(test_split_LDADD) $(LIBS)

test-subprocess$(EXEEXT): $(test_subprocess_OBJECTS) $(test_subprocess_DEPENDENCIES) $(EXTRA_test_subprocess_DEPENDENCIES) 
	@rm -f test-subprocess$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(test_subprocess_OBJECTS) $(test_subprocess_LDADD) $(LIBS)

test-timespec$(EXEEXT): $(test_timespec_OBJECTS) $(test_timespec_DEPENDENCIES) $(EXTRA_test_timespec_DEPENDENCIES) 
	@rm -f test-timespec$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(test_timespec_OBJECTS) $(test_timespec_LDADD) $(LIBS)

test-tolines$(EXEEXT): $(test_tolines_OBJECTS) $(test_tolines_DEPENDENCIES) $(EXTRA_test_tolines_DEPENDENCIES) 
	@rm -f test-tolines$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(test_tolines_OBJECTS) $(test_tolines_LDADD) $(LIBS)

test-unicode$(EXEEXT): $(test_unicode_OBJECTS) $(test_unicode_DEPENDENCIES) $(EXTRA_test_unicode_DEPENDENCIES) 
	@rm -f test-unicode$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(test_unicode_OBJECTS) $(test_unicode_LDADD) $(LIBS)

test-volume$(EXEEXT): $(test_volume_OBJECTS) $(test_volume_DEPENDENCIES) $(EXTRA_test_volume_DEPENDENCIES) 
	@rm -f test-volume$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(test_volume_OBJECTS) $(test_volume_LDADD) $(LIBS)

mostlyclean-compile:
	-rm -f *.$(OBJEXT)

distclean-compile:
	-rm -f *.tab.c

@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/Action.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/Backup.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/BackupPolicy.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/BackupPolicyAlways.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/BackupPolicyDaily.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/BackupPolicyInterval.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/BulkRemove.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/Check.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/Color.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/ColorStrategy.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/Command.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/Conf.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/ConfBase.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/ConfDirective.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/Database.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/Date.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/Device.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/DeviceAccess.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/Directory.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/Document.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/Email.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/Errors.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/EventLoop.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/FileLock.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/HTML.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/HistoryGraph.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/Host.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/IO.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/Indent.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/MakeBackup.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/Progress.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/Prune.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/PrunePolicy.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/PrunePolicyAge.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/PrunePolicyDecay.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/PrunePolicyExec.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/PrunePolicyNever.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/Render.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/Report.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/RetireDevices.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/RetireVolumes.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/Selection.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/Store.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/Subprocess.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/Text.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/Unicode.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/Volume.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/base64.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/debug.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/error.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/globFiles.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/nonblock.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/parseFloat.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/parseInteger.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/rsbackup-graph.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/rsbackup.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/split.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/stylesheet.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/substitute.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/test-action.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/test-base64.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/test-check.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/test-color.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/test-command.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/test-confbase.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/test-database.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/test-date.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/test-device.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/test-directory.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/test-eventloop.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/test-globfiles.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/test-host.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/test-indent.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/test-io.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/test-lock.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/test-parseinteger.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/test-progress.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/test-prunedecay.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/test-select.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/test-split.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/test-subprocess.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/test-timespec.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/test-tolines.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/test-unicode.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/test-volume.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/timestamp.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/toLines.Po@am__quote@ # am--include-marker

$(am__depfiles_remade):
	@$(MKDIR_P) $(@D)
	@echo '# dummy' >$@-t && $(am__mv) $@-t $@

am--depfiles: $(am__depfiles_remade)

.cc.o:
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXXCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXXCOMPILE) -c -o $@ $<

.cc.obj:
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXXCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ `$(CYGPATH_W) '$<'`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXXCOMPILE) -c -o $@ `$(CYGPATH_W) '$<'`

ID: $(am__tagged_files)
	$(am__define_uniq_tagged_files); mkid -fID $$unique
tags: tags-am
TAGS: tags

tags-am: $(TAGS_DEPENDENCIES) $(am__tagged_files)
	set x; \
	here=`pwd`; \
	$(am__define_uniq_tagged_files); \
	shift; \
	if test -z "$(ETAGS_ARGS)$$*$$unique"; then :; else \
	  test -n "$$unique" || unique=$$empty_fix; \
	  if test $$# -gt 0; then \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      "$$@" $$unique; \
	  else \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      $$unique; \
	  fi; \
	fi
ctags: ctags-am

CTAGS: ctags
ctags-am: $(TAGS_DEPENDENCIES) $(am__tagged_files)
	$(am__define_uniq_tagged_files); \
	test -z "$(CTAGS_ARGS)$$unique" \
	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
	     $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && $(am__cd) $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) "$$here"
cscopelist: cscopelist-am

cscopelist-am: $(am__tagged_files)
	list='$(am__tagged_files)'; \
	case "$(srcdir)" in \
	  [\\/]* | ?:[\\/]*) sdir="$(srcdir)" ;; \
	  *) sdir=$(subdir)/$(srcdir) ;; \
	esac; \
	for i in $$list; do \
	  if test -f "$$i"; then \
	    echo "$(subdir)/$$i"; \
	  else \
	    echo "$$sdir/$$i"; \
	  fi; \
	done >> $(top_builddir)/cscope.files

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags

# Recover from deleted '.trs' file; this should ensure that
# "rm -f foo.log; make foo.trs" re-run 'foo.test', and re-create
# both 'foo.log' and 'foo.trs'.  Break the recipe in two subshells
# to avoid problems with "make -n".
.log.trs:
	rm -f $< $@
	$(MAKE) $(AM_MAKEFLAGS) $<

# Leading 'am--fnord' is there to ensure the list of targets does not
# expand to empty, as could happen e.g. with make check TESTS=''.
am--fnord $(TEST_LOGS) $(TEST_LOGS:.log=.trs): $(am__force_recheck)
am--force-recheck:
	@:

$(TEST_SUITE_LOG): $(TEST_LOGS)
	@$(am__set_TESTS_bases); \
	am__f_ok () { test -f "$$1" && test -r "$$1"; }; \
	redo_bases=`for i in $$bases; do \
	              am__f_ok $$i.trs && am__f_ok $$i.log || echo $$i; \
	            done`; \
	if test -n "$$redo_bases"; then \
	  redo_logs=`for i in $$redo_bases; do echo $$i.log; done`; \
	  redo_results=`for i in $$redo_bases; do echo $$i.trs; done`; \
	  if $(am__make_dryrun); then :; else \
	    rm -f $$redo_logs && rm -f $$redo_results || exit 1; \
	  fi; \
	fi; \
	if test -n "$$am__remaking_logs"; then \
	  echo "fatal: making $(TEST_SUITE_LOG): possible infinite" \
	       "recursion detected" >&2; \
	elif test -n "$$redo_logs"; then \
	  am__remaking_logs=yes $(MAKE) $(AM_MAKEFLAGS) $$redo_logs; \
	fi; \
	if $(am__make_dryrun); then :; else \
	  st=0;  \
	  errmsg="fatal: making $(TEST_SUITE_LOG): failed to create"; \
	  for i in $$redo_bases; do \
	    test -f $$i.trs && test -r $$i.trs \
	      || { echo "$$errmsg $$i.trs" >&2; st=1; }; \
	    test -f $$i.log && test -r $$i.log \
	      || { echo "$$errmsg $$i.log" >&2; st=1; }; \
	  done; \
	  test $$st -eq 0 || exit 1; \
	fi
	@$(am__sh_e_setup); $(am__tty_colors); $(am__set_TESTS_bases); \
	ws='[ 	]'; \
	results=`for b in $$bases; do echo $$b.trs; done`; \
	test -n "$$results" || results=/dev/null; \
	all=`  grep "^$$ws*:test-result:"           $$results | wc -l`; \
	pass=` grep "^$$ws*:test-result:$$ws*PASS"  $$results | wc -l`; \
	fail=` grep "^$$ws*:test-result:$$ws*FAIL"  $$results | wc -l`; \
	skip=` grep "^$$ws*:test-result:$$ws*SKIP"  $$results | wc -l`; \
	xfail=`grep "^$$ws*:test-result:$$ws*XFAIL" $$results | wc -l`; \
	xpass=`grep "^$$ws*:test-result:$$ws*XPASS" $$results | wc -l`; \
	error=`grep "^$$ws*:test-result:$$ws*ERROR" $$results | wc -l`; \
	if test `expr $$fail + $$xpass + $$error` -eq 0; then \
	  success=true; \
	else \
	  success=false; \
	fi; \
	br='==================='; br=$$br$$br$$br$$br; \
	result_count () \
	{ \
	    if test x"$$1" = x"--maybe-color"; then \
	      maybe_colorize=yes; \
	    elif test x"$$1" = x"--no-color"; then \
	      maybe_colorize=no; \
	    else \
	      echo "$@: invalid 'result_count' usage" >&2; exit 4; \
	    fi; \
	    shift; \
	    desc=$$1 count=$$2; \
	    if test $$maybe_colorize = yes && test $$count -gt 0; then \
	      color_start=$$3 color_end=$$std; \
	    else \
	      color_start= color_end=; \
	    fi; \
	    echo "$${color_start}# $$desc $$count$${color_end}"; \
	}; \
	create_testsuite_report () \
	{ \
	  result_count $$1 "TOTAL:" $$all   "$$brg"; \
	  result_count $$1 "PASS: " $$pass  "$$grn"; \
	  result_count $$1 "SKIP: " $$skip  "$$blu"; \
	  result_count $$1 "XFAIL:" $$xfail "$$lgn"; \
	  result_count $$1 "FAIL: " $$fail  "$$red"; \
	  result_count $$1 "XPASS:" $$xpass "$$red"; \
	  result_count $$1 "ERROR:" $$error "$$mgn"; \
	}; \
	{								\
	  echo "$(PACKAGE_STRING): $(subdir)/$(TEST_SUITE_LOG)" |	\
	    $(am__rst_title);						\
	  create_testsuite_report --no-color;				\
	  echo;								\
	  echo ".. contents:: :depth: 2";				\
	  echo;								\
	  for b in $$bases; do echo $$b; done				\
	    | $(am__create_global_log);					\
	} >$(TEST_SUITE_LOG).tmp || exit 1;				\
	mv $(TEST_SUITE_LOG).tmp $(TEST_SUITE_LOG);			\
	if $$success; then						\
	  col="$$grn";							\
	 else								\
	  col="$$red";							\
	  test x"$$VERBOSE" = x || cat $(TEST_SUITE_LOG);		\
	fi;								\
	echo "$${col}$$br$${std}"; 					\
	echo "$${col}Testsuite summary for $(PACKAGE_STRING)$${std}";	\
	echo "$${col}$$br$${std}"; 					\
	create_testsuite_report --maybe-color;				\
	echo "$$col$$br$$std";						\
	if $$success; then :; else					\
	  echo "$${col}See $(subdir)/$(TEST_SUITE_LOG)$${std}";		\
	  if test -n "$(PACKAGE_BUGREPORT)"; then			\
	    echo "$${col}Please report to $(PACKAGE_BUGREPORT)$${std}";	\
	  fi;								\
	  echo "$$col$$br$$std";					\
	fi;								\
	$$success || exit 1

check-TESTS: 
	@list='$(RECHECK_LOGS)';           test -z "$$list" || rm -f $$list
	@list='$(RECHECK_LOGS:.log=.trs)'; test -z "$$list" || rm -f $$list
	@test -z "$(TEST_SUITE_LOG)" || rm -f $(TEST_SUITE_LOG)
	@set +e; $(am__set_TESTS_bases); \
	log_list=`for i in $$bases; do echo $$i.log; done`; \
	trs_list=`for i in $$bases; do echo $$i.trs; done`; \
	log_list=`echo $$log_list`; trs_list=`echo $$trs_list`; \
	$(MAKE) $(AM_MAKEFLAGS) $(TEST_SUITE_LOG) TEST_LOGS="$$log_list"; \
	exit $$?;
recheck: all 
	@test -z "$(TEST_SUITE_LOG)" || rm -f $(TEST_SUITE_LOG)
	@set +e; $(am__set_TESTS_bases); \
	bases=`for i in $$bases; do echo $$i; done \
	         | $(am__list_recheck_tests)` || exit 1; \
	log_list=`for i in $$bases; do echo $$i.log; done`; \
	log_list=`echo $$log_list`; \
	$(MAKE) $(AM_MAKEFLAGS) $(TEST_SUITE_LOG) \
	        am__force_recheck=am--force-recheck \
	        TEST_LOGS="$$log_list"; \
	exit $$?
test-date.log: test-date$(EXEEXT)
	@p='test-date$(EXEEXT)'; \
	b='test-date'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
test-io.log: test-io$(EXEEXT)
	@p='test-io$(EXEEXT)'; \
	b='test-io'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
test-directory.log: test-directory$(EXEEXT)
	@p='test-directory$(EXEEXT)'; \
	b='test-directory'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
test-subprocess.log: test-subprocess$(EXEEXT)
	@p='test-subprocess$(EXEEXT)'; \
	b='test-subprocess'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
test-unicode.log: test-unicode$(EXEEXT)
	@p='test-unicode$(EXEEXT)'; \
	b='test-unicode'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
test-timespec.log: test-timespec$(EXEEXT)
	@p='test-timespec$(EXEEXT)'; \
	b='test-timespec'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
test-command.log: test-command$(EXEEXT)
	@p='test-command$(EXEEXT)'; \
	b='test-command'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
test-select.log: test-select$(EXEEXT)
	@p='test-select$(EXEEXT)'; \
	b='test-select'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
test-confbase.log: test-confbase$(EXEEXT)
	@p='test-confbase$(EXEEXT)'; \
	b='test-confbase'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
test-check.log: test-check$(EXEEXT)
	@p='test-check$(EXEEXT)'; \
	b='test-check'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
test-device.log: test-device$(EXEEXT)
	@p='test-device$(EXEEXT)'; \
	b='test-device'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
test-host.log: test-host$(EXEEXT)
	@p='test-host$(EXEEXT)'; \
	b='test-host'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
test-volume.log: test-volume$(EXEEXT)
	@p='test-volume$(EXEEXT)'; \
	b='test-volume'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
test-progress.log: test-progress$(EXEEXT)
	@p='test-progress$(EXEEXT)'; \
	b='test-progress'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
test-database.log: test-database$(EXEEXT)
	@p='test-database$(EXEEXT)'; \
	b='test-database'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
test-tolines.log: test-tolines$(EXEEXT)
	@p='test-tolines$(EXEEXT)'; \
	b='test-tolines'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
test-globfiles.log: test-globfiles$(EXEEXT)
	@p='test-globfiles$(EXEEXT)'; \
	b='test-globfiles'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
test-lock.log: test-lock$(EXEEXT)
	@p='test-lock$(EXEEXT)'; \
	b='test-lock'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
test-split.log: test-split$(EXEEXT)
	@p='test-split$(EXEEXT)'; \
	b='test-split'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
test-parseinteger.log: test-parseinteger$(EXEEXT)
	@p='test-parseinteger$(EXEEXT)'; \
	b='test-parseinteger'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
test-prunedecay.log: test-prunedecay$(EXEEXT)
	@p='test-prunedecay$(EXEEXT)'; \
	b='test-prunedecay'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
test-eventloop.log: test-eventloop$(EXEEXT)
	@p='test-eventloop$(EXEEXT)'; \
	b='test-eventloop'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
test-color.log: test-color$(EXEEXT)
	@p='test-color$(EXEEXT)'; \
	b='test-color'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
test-base64.log: test-base64$(EXEEXT)
	@p='test-base64$(EXEEXT)'; \
	b='test-base64'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
test-indent.log: test-indent$(EXEEXT)
	@p='test-indent$(EXEEXT)'; \
	b='test-indent'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
test-action.log: test-action$(EXEEXT)
	@p='test-action$(EXEEXT)'; \
	b='test-action'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
check-source.log: check-source
	@p='check-source'; \
	b='check-source'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
.test.log:
	@p='$<'; \
	$(am__set_b); \
	$(am__check_pre) $(TEST_LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_TEST_LOG_DRIVER_FLAGS) $(TEST_LOG_DRIVER_FLAGS) -- $(TEST_LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
@am__EXEEXT_TRUE@.test$(EXEEXT).log:
@am__EXEEXT_TRUE@	@p='$<'; \
@am__EXEEXT_TRUE@	$(am__set_b); \
@am__EXEEXT_TRUE@	$(am__check_pre) $(TEST_LOG_DRIVER) --test-name "$$f" \
@am__EXEEXT_TRUE@	--log-file $$b.log --trs-file $$b.trs \
@am__EXEEXT_TRUE@	$(am__common_driver_flags) $(AM_TEST_LOG_DRIVER_FLAGS) $(TEST_LOG_DRIVER_FLAGS) -- $(TEST_LOG_COMPILE) \
@am__EXEEXT_TRUE@	"$$tst" $(AM_TESTS_FD_REDIRECT)

distdir: $(BUILT_SOURCES)
	$(MAKE) $(AM_MAKEFLAGS) distdir-am

distdir-am: $(DISTFILES)
	@srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	list='$(DISTFILES)'; \
	  dist_files=`for file in $$list; do echo $$file; done | \
	  sed -e "s|^$$srcdirstrip/||;t" \
	      -e "s|^$$topsrcdirstrip/|$(top_builddir)/|;t"`; \
	case $$dist_files in \
	  */*) $(MKDIR_P) `echo "$$dist_files" | \
			   sed '/\//!d;s|^|$(distdir)/|;s,/[^/]*$$,,' | \
			   sort -u` ;; \
	esac; \
	for file in $$dist_files; do \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  if test -d $$d/$$file; then \
	    dir=`echo "/$$file" | sed -e 's,/[^/]*$$,,'`; \
	    if test -d "$(distdir)/$$file"; then \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -fpR $(srcdir)/$$file "$(distdir)$$dir" || exit 1; \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    cp -fpR $$d/$$file "$(distdir)$$dir" || exit 1; \
	  else \
	    test -f "$(distdir)/$$file" \
	    || cp -p $$d/$$file "$(distdir)/$$file" \
	    || exit 1; \
	  fi; \
	done
check-am: all-am
	$(MAKE) $(AM_MAKEFLAGS) check-TESTS
check: check-am
all-am: Makefile $(PROGRAMS) $(LIBRARIES) $(SCRIPTS)
installdirs:
	for dir in "$(DESTDIR)$(bindir)"; do \
	  test -z "$$dir" || $(MKDIR_P) "$$dir"; \
	done
install: install-am
install-exec: install-exec-am
install-data: install-data-am
uninstall: uninstall-am

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-am
install-strip:
	if test -z '$(STRIP)'; then \
	  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	    install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	      install; \
	else \
	  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	    install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	    "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'" install; \
	fi
mostlyclean-generic:
	-test -z "$(TEST_LOGS)" || rm -f $(TEST_LOGS)
	-test -z "$(TEST_LOGS:.log=.trs)" || rm -f $(TEST_LOGS:.log=.trs)
	-test -z "$(TEST_SUITE_LOG)" || rm -f $(TEST_SUITE_LOG)

clean-generic:

distclean-generic:
	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)
	-test . = "$(srcdir)" || test -z "$(CONFIG_CLEAN_VPATH_FILES)" || rm -f $(CONFIG_CLEAN_VPATH_FILES)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
clean: clean-am

clean-am: clean-binPROGRAMS clean-generic clean-noinstLIBRARIES \
	clean-noinstPROGRAMS mostlyclean-am

distclean: distclean-am
		-rm -f ./$(DEPDIR)/Action.Po
	-rm -f ./$(DEPDIR)/Backup.Po
	-rm -f ./$(DEPDIR)/BackupPolicy.Po
	-rm -f ./$(DEPDIR)/BackupPolicyAlways.Po
	-rm -f ./$(DEPDIR)/BackupPolicyDaily.Po
	-rm -f ./$(DEPDIR)/BackupPolicyInterval.Po
	-rm -f ./$(DEPDIR)/BulkRemove.Po
	-rm -f ./$(DEPDIR)/Check.Po
	-rm -f ./$(DEPDIR)/Color.Po
	-rm -f ./$(DEPDIR)/ColorStrategy.Po
	-rm -f ./$(DEPDIR)/Command.Po
	-rm -f ./$(DEPDIR)/Conf.Po
	-rm -f ./$(DEPDIR)/ConfBase.Po
	-rm -f ./$(DEPDIR)/ConfDirective.Po
	-rm -f ./$(DEPDIR)/Database.Po
	-rm -f ./$(DEPDIR)/Date.Po
	-rm -f ./$(DEPDIR)/Device.Po
	-rm -f ./$(DEPDIR)/DeviceAccess.Po
	-rm -f ./$(DEPDIR)/Directory.Po
	-rm -f ./$(DEPDIR)/Document.Po
	-rm -f ./$(DEPDIR)/Email.Po
	-rm -f ./$(DEPDIR)/Errors.Po
	-rm -f ./$(DEPDIR)/EventLoop.Po
	-rm -f ./$(DEPDIR)/FileLock.Po
	-rm -f ./$(DEPDIR)/HTML.Po
	-rm -f ./$(DEPDIR)/HistoryGraph.Po
	-rm -f ./$(DEPDIR)/Host.Po
	-rm -f ./$(DEPDIR)/IO.Po
	-rm -f ./$(DEPDIR)/Indent.Po
	-rm -f ./$(DEPDIR)/MakeBackup.Po
	-rm -f ./$(DEPDIR)/Progress.Po
	-rm -f ./$(DEPDIR)/Prune.Po
	-rm -f ./$(DEPDIR)/PrunePolicy.Po
	-rm -f ./$(DEPDIR)/PrunePolicyAge.Po
	-rm -f ./$(DEPDIR)/PrunePolicyDecay.Po
	-rm -f ./$(DEPDIR)/PrunePolicyExec.Po
	-rm -f ./$(DEPDIR)/PrunePolicyNever.Po
	-rm -f ./$(DEPDIR)/Render.Po
	-rm -f ./$(DEPDIR)/Report.Po
	-rm -f ./$(DEPDIR)/RetireDevices.Po
	-rm -f ./$(DEPDIR)/RetireVolumes.Po
	-rm -f ./$(DEPDIR)/Selection.Po
	-rm -f ./$(DEPDIR)/Store.Po
	-rm -f ./$(DEPDIR)/Subprocess.Po
	-rm -f ./$(DEPDIR)/Text.Po
	-rm -f ./$(DEPDIR)/Unicode.Po
	-rm -f ./$(DEPDIR)/Volume.Po
	-rm -f ./$(DEPDIR)/base64.Po
	-rm -f ./$(DEPDIR)/debug.Po
	-rm -f ./$(DEPDIR)/error.Po
	-rm -f ./$(DEPDIR)/globFiles.Po
	-rm -f ./$(DEPDIR)/nonblock.Po
	-rm -f ./$(DEPDIR)/parseFloat.Po
	-rm -f ./$(DEPDIR)/parseInteger.Po
	-rm -f ./$(DEPDIR)/rsbackup-graph.Po
	-rm -f ./$(DEPDIR)/rsbackup.Po
	-rm -f ./$(DEPDIR)/split.Po
	-rm -f ./$(DEPDIR)/stylesheet.Po
	-rm -f ./$(DEPDIR)/substitute.Po
	-rm -f ./$(DEPDIR)/test-action.Po
	-rm -f ./$(DEPDIR)/test-base64.Po
	-rm -f ./$(DEPDIR)/test-check.Po
	-rm -f ./$(DEPDIR)/test-color.Po
	-rm -f ./$(DEPDIR)/test-command.Po
	-rm -f ./$(DEPDIR)/test-confbase.Po
	-rm -f ./$(DEPDIR)/test-database.Po
	-rm -f ./$(DEPDIR)/test-date.Po
	-rm -f ./$(DEPDIR)/test-device.Po
	-rm -f ./$(DEPDIR)/test-directory.Po
	-rm -f ./$(DEPDIR)/test-eventloop.Po
	-rm -f ./$(DEPDIR)/test-globfiles.Po
	-rm -f ./$(DEPDIR)/test-host.Po
	-rm -f ./$(DEPDIR)/test-indent.Po
	-rm -f ./$(DEPDIR)/test-io.Po
	-rm -f ./$(DEPDIR)/test-lock.Po
	-rm -f ./$(DEPDIR)/test-parseinteger.Po
	-rm -f ./$(DEPDIR)/test-progress.Po
	-rm -f ./$(DEPDIR)/test-prunedecay.Po
	-rm -f ./$(DEPDIR)/test-select.Po
	-rm -f ./$(DEPDIR)/test-split.Po
	-rm -f ./$(DEPDIR)/test-subprocess.Po
	-rm -f ./$(DEPDIR)/test-timespec.Po
	-rm -f ./$(DEPDIR)/test-tolines.Po
	-rm -f ./$(DEPDIR)/test-unicode.Po
	-rm -f ./$(DEPDIR)/test-volume.Po
	-rm -f ./$(DEPDIR)/timestamp.Po
	-rm -f ./$(DEPDIR)/toLines.Po
	-rm -f Makefile
distclean-am: clean-am distclean-compile distclean-generic \
	distclean-tags

dvi: dvi-am

dvi-am:

html: html-am

html-am:

info: info-am

info-am:

install-data-am:

install-dvi: install-dvi-am

install-dvi-am:

install-exec-am: install-binPROGRAMS

install-html: install-html-am

install-html-am:

install-info: install-info-am

install-info-am:

install-man:

install-pdf: install-pdf-am

install-pdf-am:

install-ps: install-ps-am

install-ps-am:

installcheck-am:

maintainer-clean: maintainer-clean-am
		-rm -f ./$(DEPDIR)/Action.Po
	-rm -f ./$(DEPDIR)/Backup.Po
	-rm -f ./$(DEPDIR)/BackupPolicy.Po
	-rm -f ./$(DEPDIR)/BackupPolicyAlways.Po
	-rm -f ./$(DEPDIR)/BackupPolicyDaily.Po
	-rm -f ./$(DEPDIR)/BackupPolicyInterval.Po
	-rm -f ./$(DEPDIR)/BulkRemove.Po
	-rm -f ./$(DEPDIR)/Check.Po
	-rm -f ./$(DEPDIR)/Color.Po
	-rm -f ./$(DEPDIR)/ColorStrategy.Po
	-rm -f ./$(DEPDIR)/Command.Po
	-rm -f ./$(DEPDIR)/Conf.Po
	-rm -f ./$(DEPDIR)/ConfBase.Po
	-rm -f ./$(DEPDIR)/ConfDirective.Po
	-rm -f ./$(DEPDIR)/Database.Po
	-rm -f ./$(DEPDIR)/Date.Po
	-rm -f ./$(DEPDIR)/Device.Po
	-rm -f ./$(DEPDIR)/DeviceAccess.Po
	-rm -f ./$(DEPDIR)/Directory.Po
	-rm -f ./$(DEPDIR)/Document.Po
	-rm -f ./$(DEPDIR)/Email.Po
	-rm -f ./$(DEPDIR)/Errors.Po
	-rm -f ./$(DEPDIR)/EventLoop.Po
	-rm -f ./$(DEPDIR)/FileLock.Po
	-rm -f ./$(DEPDIR)/HTML.Po
	-rm -f ./$(DEPDIR)/HistoryGraph.Po
	-rm -f ./$(DEPDIR)/Host.Po
	-rm -f ./$(DEPDIR)/IO.Po
	-rm -f ./$(DEPDIR)/Indent.Po
	-rm -f ./$(DEPDIR)/MakeBackup.Po
	-rm -f ./$(DEPDIR)/Progress.Po
	-rm -f ./$(DEPDIR)/Prune.Po
	-rm -f ./$(DEPDIR)/PrunePolicy.Po
	-rm -f ./$(DEPDIR)/PrunePolicyAge.Po
	-rm -f ./$(DEPDIR)/PrunePolicyDecay.Po
	-rm -f ./$(DEPDIR)/PrunePolicyExec.Po
	-rm -f ./$(DEPDIR)/PrunePolicyNever.Po
	-rm -f ./$(DEPDIR)/Render.Po
	-rm -f ./$(DEPDIR)/Report.Po
	-rm -f ./$(DEPDIR)/RetireDevices.Po
	-rm -f ./$(DEPDIR)/RetireVolumes.Po
	-rm -f ./$(DEPDIR)/Selection.Po
	-rm -f ./$(DEPDIR)/Store.Po
	-rm -f ./$(DEPDIR)/Subprocess.Po
	-rm -f ./$(DEPDIR)/Text.Po
	-rm -f ./$(DEPDIR)/Unicode.Po
	-rm -f ./$(DEPDIR)/Volume.Po
	-rm -f ./$(DEPDIR)/base64.Po
	-rm -f ./$(DEPDIR)/debug.Po
	-rm -f ./$(DEPDIR)/error.Po
	-rm -f ./$(DEPDIR)/globFiles.Po
	-rm -f ./$(DEPDIR)/nonblock.Po
	-rm -f ./$(DEPDIR)/parseFloat.Po
	-rm -f ./$(DEPDIR)/parseInteger.Po
	-rm -f ./$(DEPDIR)/rsbackup-graph.Po
	-rm -f ./$(DEPDIR)/rsbackup.Po
	-rm -f ./$(DEPDIR)/split.Po
	-rm -f ./$(DEPDIR)/stylesheet.Po
	-rm -f ./$(DEPDIR)/substitute.Po
	-rm -f ./$(DEPDIR)/test-action.Po
	-rm -f ./$(DEPDIR)/test-base64.Po
	-rm -f ./$(DEPDIR)/test-check.Po
	-rm -f ./$(DEPDIR)/test-color.Po
	-rm -f ./$(DEPDIR)/test-command.Po
	-rm -f ./$(DEPDIR)/test-confbase.Po
	-rm -f ./$(DEPDIR)/test-database.Po
	-rm -f ./$(DEPDIR)/test-date.Po
	-rm -f ./$(DEPDIR)/test-device.Po
	-rm -f ./$(DEPDIR)/test-directory.Po
	-rm -f ./$(DEPDIR)/test-eventloop.Po
	-rm -f ./$(DEPDIR)/test-globfiles.Po
	-rm -f ./$(DEPDIR)/test-host.Po
	-rm -f ./$(DEPDIR)/test-indent.Po
	-rm -f ./$(DEPDIR)/test-io.Po
	-rm -f ./$(DEPDIR)/test-lock.Po
	-rm -f ./$(DEPDIR)/test-parseinteger.Po
	-rm -f ./$(DEPDIR)/test-progress.Po
	-rm -f ./$(DEPDIR)/test-prunedecay.Po
	-rm -f ./$(DEPDIR)/test-select.Po
	-rm -f ./$(DEPDIR)/test-split.Po
	-rm -f ./$(DEPDIR)/test-subprocess.Po
	-rm -f ./$(DEPDIR)/test-timespec.Po
	-rm -f ./$(DEPDIR)/test-tolines.Po
	-rm -f ./$(DEPDIR)/test-unicode.Po
	-rm -f ./$(DEPDIR)/test-volume.Po
	-rm -f ./$(DEPDIR)/timestamp.Po
	-rm -f ./$(DEPDIR)/toLines.Po
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-am

mostlyclean-am: mostlyclean-compile mostlyclean-generic

pdf: pdf-am

pdf-am:

ps: ps-am

ps-am:

uninstall-am: uninstall-binPROGRAMS

.MAKE: check-am install-am install-strip

.PHONY: CTAGS GTAGS TAGS all all-am am--depfiles check check-TESTS \
	check-am clean clean-binPROGRAMS clean-generic \
	clean-noinstLIBRARIES clean-noinstPROGRAMS cscopelist-am ctags \
	ctags-am distclean distclean-compile distclean-generic \
	distclean-tags distdir dvi dvi-am html html-am info info-am \
	install install-am install-binPROGRAMS install-data \
	install-data-am install-dvi install-dvi-am install-exec \
	install-exec-am install-html install-html-am install-info \
	install-info-am install-man install-pdf install-pdf-am \
	install-ps install-ps-am install-strip installcheck \
	installcheck-am installdirs maintainer-clean \
	maintainer-clean-generic mostlyclean mostlyclean-compile \
	mostlyclean-generic pdf pdf-am ps ps-am recheck tags tags-am \
	uninstall uninstall-am uninstall-binPROGRAMS

.PRECIOUS: Makefile


stylesheet.cc: ${top_srcdir}/doc/rsbackup.css
	${top_srcdir}/scripts/txt2src stylesheet < $^ > $@

# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
